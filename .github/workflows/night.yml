name: Build and Publish Android Pre-Release APKs

on:
  push:
    branches:
      - master

permissions: write-all

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      tag_version_name: ${{ steps.set_version.outputs.tag_version_name }}
    steps:
      - name: 下载代码
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 设置Java编译环境
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'
      - name: 编译安卓
        run: |
          rootDir=$(pwd)
          # 配置版本号和版本名
          versionName=$(grep 'versionName' "${rootDir}/app/build.gradle" | sed -n 's/.*versionName "\([^"]*\)".*/\1/p' |awk '{print $2}' |  tr -d '[:space:]')
          versionCode=$(grep 'versionCode' "${rootDir}/app/build.gradle" |  awk '{print $2}' | tr -d '[:space:]')
          # 设置标签名，使用 '+' 分隔构建元数据
          tagVersionName="v${versionName}+commit.$(date +'%Y%m%d%H%M%S')"
          echo "tag_version_name=${tagVersionName}" >> $GITHUB_OUTPUT
          echo "${tagVersionName}" >> ${{github.workspace}}/tagVersionName.txt
          echo "${versionCode}" >> ${{github.workspace}}/versionCode.txt
          # 配置运行权限
          chmod +x "${rootDir}/gradlew"
          # 创建release目录
          mkdir "${rootDir}/release/"
          # 构建二进制文件
          "${rootDir}/gradlew" app:buildCMakeRelWithDebInfo --stacktrace
          # 优先构建xposed版本
          for flavor in xposed ; do
            "${rootDir}/gradlew" "assemble${flavor^}Release"
            cp "${rootDir}/app/build/outputs/apk/${flavor}/release/app.apk" "${rootDir}/release/app-${flavor}.apk"
          done
        id: set_version
      - name: 上传 APK 到 artifact
        uses: actions/upload-artifact@v3
        with:
          name: temp-apk
          path: ${{github.workspace}}/release/
      - name: 打包脚本
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: |
            ${{github.workspace}}/tagVersionName.txt
            ${{github.workspace}}/versionCode.txt
            ${{github.workspace}}/.github/workflows/upload.py
            ${{github.workspace}}/.github/workflows/configuration.json

  sign:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: 下载 APK
        uses: actions/download-artifact@v3
        with:
          name: temp-apk
          path: release/
      - uses: ilharp/sign-android-release@v1
        name: 签名
        id: sign_app
        with:
          releaseDir: release
          signingKey: ${{ secrets.SIGNING_KEY }}
          keyAlias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          buildToolsVersion: 34.0.0
      - name: 上传 APK 到 artifact
        uses: actions/upload-artifact@v3
        with:
          name: signed-app-apk
          path: ${{steps.sign_app.outputs.signedFile}}
      - name: 创建标签
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ needs.setup.outputs.tag_version_name }}
          COMMIT_SHA: ${{ github.sha }}
        run: |
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/git/refs \
            -d "{\"ref\":\"refs/tags/$TAG_NAME\",\"sha\":\"$COMMIT_SHA\"}"


  log:
    needs: sign
    runs-on: ubuntu-latest
    steps:
      - name: 下载脚本
        uses: actions/download-artifact@v3
        with:
          name: package
          path: package/
      - name: 生成构建日志
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          commitMode: true
          configuration: "package/.github/workflows/configuration.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Add Changelog to Summary
        run: |
          # 从文件中读取版本号
          VERSION=$(cat "${{github.workspace}}/package/tagVersionName.txt")
          echo "# 更新日志" >> $GITHUB_STEP_SUMMARY
          echo "- 版本：$VERSION" >> $GITHUB_STEP_SUMMARY
          echo "- 时间：$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat <<EOF > changelog.txt
            ${{ steps.github_release.outputs.changelog }}
          EOF
          cat changelog.txt >> $GITHUB_STEP_SUMMARY
      - name: Upload Changelog as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Changelog
          path: changelog.txt

  upload-apk:
    needs: log
    runs-on: ubuntu-latest
    steps:
      - name: 下载签名后的 APK
        uses: actions/download-artifact@v3
        with:
          name: signed-app-apk
          path: release/
      - name: 下载脚本
        uses: actions/download-artifact@v3
        with:
          name: package
          path: package/
      - name: 下载日志
        uses: actions/download-artifact@v3
        with:
          name: Changelog
          path: log/
      - name: 上传 APK
        run: pip install requests markdown && python package/.github/workflows/upload.py
        env:
          GITHUB_WORKSPACE: ${{ env.GITHUB_WORKSPACE }}
          HOST_ENV_VAR: ${{ secrets.HOST_ENV_VAR }}
          USERNAME_ENV_VAR: ${{ secrets.USERNAME_ENV_VAR }}
          PASSWORD_ENV_VAR: ${{ secrets.PASSWORD_ENV_VAR }}

